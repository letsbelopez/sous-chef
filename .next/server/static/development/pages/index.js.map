{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/DatePopover.js","webpack:///./components/IngredientTotalsTable.js","webpack:///./components/OrderDatePicker.js","webpack:///./components/OrderProvider.js","webpack:///./components/OrderTotalsTable.js","webpack:///./helpers.js","webpack:///./pages/index.js","webpack:///external \"@shopify/polaris\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { Component } from \"react\";\nimport { Button, Popover } from \"@shopify/polaris\";\nimport { OrderConsumer } from \"./OrderProvider\";\nimport OrderDatePicker from \"./OrderDatePicker\";\nimport { formatDate } from \"../helpers\";\n\nclass DatePopover extends Component {\n  state = {\n    active: false\n  };\n\n  togglePopover = () => {\n    this.setState(({ active }) => {\n      return { active: !active };\n    });\n  };\n\n  render() {\n    const activator = (\n      <OrderConsumer>\n        {({ dates }) => (\n          <Button onClick={this.togglePopover} disclosure>\n            {dates === null ? 'Choose date' : formatDate(dates.start)}\n          </Button>\n        )}\n      </OrderConsumer>\n    );\n\n    return (\n      <div style={{ display: \"inline-block\" }}>\n        <Popover\n          active={this.state.active}\n          activator={activator}\n          onClose={this.togglePopover}\n          sectioned\n        >\n          <OrderDatePicker togglePopover={this.togglePopover} />\n        </Popover>\n      </div>\n    );\n  }\n}\n\nexport default DatePopover;\n","import React, { Component } from \"react\";\nimport { OrderConsumer } from \"./OrderProvider\";\nimport { Card, DataTable } from \"@shopify/polaris\";\n\nclass IngredientTotalsTable extends Component {\n  // TODO Get Ingredients on Sort to work\n  onSort = (headingIndex, direction) => {\n    const ingredients = this.state.ingredients;\n    if (direction === \"ascending\") {\n      ingredients.sort((a, b) => {\n        if (a[headingIndex] < b[headingIndex]) {\n          return -1;\n        }\n        if (a[headingIndex] > b[headingIndex]) {\n          return 1;\n        }\n        return 0;\n      });\n    } else {\n      ingredients.sort((a, b) => {\n        if (a[headingIndex] < b[headingIndex]) {\n          return 1;\n        }\n        if (a[headingIndex] > b[headingIndex]) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Card.Section>\n        <OrderConsumer>\n          {({ ingredients }) => (\n            <DataTable\n              columnContentTypes={[\"text\", \"numeric\", \"text\"]}\n              headings={[\"Ingredient\", \"Quantity\", \"Measurement\"]}\n              sortable={[true, true]}\n              defaultSortDirection=\"descending\"\n              onSort={this.onSort}\n              rows={ingredients}\n              // totals={[\"\", \"\", totalProducts]}\n              footerContent=\"by David Lopez\"\n            />\n          )}\n        </OrderConsumer>\n      </Card.Section>\n    );\n  }\n}\n\nexport default IngredientTotalsTable;\n","import React, { Component } from \"react\";\nimport { DatePicker, FormLayout } from \"@shopify/polaris\";\nimport { OrderConsumer } from \"../components/OrderProvider\";\n\nconst today = new Date();\n\nclass OrderDatePicker extends Component {\n  state = {\n    month: today.getMonth(),\n    year: today.getFullYear()\n  }\n\n  handleMonthChange = (month, year) => {\n    this.setState({\n      month,\n      year\n    })\n  }\n\n  render() {\n    const { month, year } = this.state;\n\n    return (\n      <FormLayout>\n        <OrderConsumer>\n          {({ updatePath, updateDates }) => (\n            <DatePicker\n              month={month}\n              year={year}\n              onChange={value => {\n                updatePath(value)\n                updateDates(value)\n                this.props.togglePopover()\n              }}\n              onMonthChange={this.handleMonthChange}\n              allowRange={false}\n            />\n          )}\n        </OrderConsumer>\n      </FormLayout>\n    )\n  }\n}\n\nexport default OrderDatePicker\n","import React, { Component } from \"react\";\n\nconst OrderContext = React.createContext();\n\nclass OrderProvider extends Component {\n  state = {\n    path: \"\",\n    dates: null,\n    orders: [],\n    ingredients: [],\n    requestInProgress: false\n  };\n\n  buildIngredientRows = () => {\n    const orders = this.state.orders;\n    const promises = [];\n\n    orders.forEach(row => {\n      const p = this.getProductMetafields(row[1]);\n      promises.push(p);\n    });\n\n    // TODO Finish ingredient totalling\n    Promise.all(promises)\n      .then(metafields => {\n        const ingredientTotals = metafields\n          .reduce((obj, metafield) => {\n            if (metafield) {\n              const value = JSON.parse(metafield[0].value);\n              const ingredients = Object.keys(value).map(key => {\n                return value[key];\n              });\n\n              return obj.concat(ingredients);\n            }\n\n            return obj;\n          }, [])\n          .reduce((obj, item) => {\n            const { name, quantity, measurement } = item;\n            if (!obj[name]) {\n              obj[name] = {};\n              obj[name].quantity = 0;\n              obj[name].measurement = measurement;\n            }\n            obj[name].quantity += parseInt(quantity, 10);\n            return obj;\n          }, {});\n\n        const rows = Object.keys(ingredientTotals).map(key => {\n          return [\n            key,\n            ingredientTotals[key].quantity,\n            ingredientTotals[key].measurement\n          ];\n        });\n        this.setState({ ingredients: rows });\n      })\n      .catch(error => console.error(error));\n  };\n\n  buildOrderRows = orders => {\n    const productQuantities = orders\n      .reduce((obj, order) => {\n        return [...obj, ...order.line_items];\n      }, [])\n      .reduce((obj, item) => {\n        const { name, quantity, product_id } = item;\n        if (!obj[name]) {\n          obj[name] = {};\n          obj[name].quantity = 0;\n          obj[name].product_id = product_id;\n        }\n        obj[name].quantity += quantity;\n        return obj;\n      }, {});\n\n    const rows = Object.keys(productQuantities).map(key => {\n      return [\n        key,\n        productQuantities[key].product_id,\n        productQuantities[key].quantity\n      ];\n    });\n\n    this.setState({ orders: rows, requestInProgress: false });\n    this.buildIngredientRows();\n  };\n\n  getOrders = () => {\n    this.setState({ requestInProgress: true });\n\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    };\n\n    fetch(`/api${this.state.path}`, fetchOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.buildOrderRows(json.orders);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  getProductMetafields = id => {\n    this.setState({ requestInProgress: true });\n\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    };\n\n    return fetch(`/api/products/${id}/metafields.json`, fetchOptions)\n      .then(response => response.json())\n      .then(json => {\n        const ingredients = json.metafields.filter(metafield => {\n          return metafield.namespace === \"sousChef\";\n        });\n        if (ingredients.length > 0) {\n          return ingredients;\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  updatePath = dates => {\n    const path = `/orders.json?processed_at_min=${dates.start.toISOString()}`;\n    this.setState({ path });\n  };\n\n  updateDates = dates => {\n    this.setState({ dates });\n  };\n\n  render() {\n    return (\n      <OrderContext.Provider\n        value={{\n          path: this.state.path,\n          dates: this.state.dates,\n          ingredients: this.state.ingredients,\n          orders: this.state.orders,\n          getOrders: this.getOrders,\n          getProductMetafields: this.getProductMetafields,\n          updateDates: this.updateDates,\n          updatePath: this.updatePath\n        }}\n      >\n        {this.props.children}\n      </OrderContext.Provider>\n    );\n  }\n}\n\nconst OrderConsumer = OrderContext.Consumer;\n\nexport default OrderProvider;\nexport { OrderConsumer };\n","import React, { Component } from \"react\";\nimport { Card, DataTable, Spinner } from \"@shopify/polaris\";\n\nclass OrderTotalsTable extends Component {\n  onSort = (headingIndex, direction) => {\n    const orders = this.props.orders;\n    if (direction === \"ascending\") {\n      orders.sort((a, b) => {\n        if (a[headingIndex] < b[headingIndex]) {\n          return -1;\n        }\n        if (a[headingIndex] > b[headingIndex]) {\n          return 1;\n        }\n        return 0;\n      });\n    } else {\n      orders.sort((a, b) => {\n        if (a[headingIndex] < b[headingIndex]) {\n          return 1;\n        }\n        if (a[headingIndex] > b[headingIndex]) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n  };\n\n  renderTable() {\n    const orders = this.props.orders;\n\n    const totalProducts = orders.reduce((total, row) => {\n      return (total += row[2]);\n    }, 0);\n\n    return (\n      <DataTable\n        columnContentTypes={[\"text\", \"text\", \"numeric\"]}\n        headings={[\"Meal\", \"Product Id\", \"Quantity\"]}\n        sortable={[true, false, true]}\n        defaultSortDirection=\"descending\"\n        onSort={this.onSort}\n        rows={orders}\n        totals={[\"\", \"\", totalProducts]}\n        footerContent=\"by David Lopez\"\n      />\n    );\n  }\n\n  render() {\n    const orders = this.props.orders;\n    const requestInProgress = this.props.requestInProgress;\n\n    if (requestInProgress) {\n      return (\n        <Card.Section>\n          <div style={{ textAlign: \"center\" }}>\n            <Spinner size=\"large\" color=\"teal\" accessibilityLabel=\"loading\" />\n          </div>\n        </Card.Section>\n      );\n    }\n\n    if (orders === \"\" || orders.length <= 0) {\n      return (\n        <Card.Section title=\"No meals found\">\n          <p>Try selecting or changing the date</p>\n        </Card.Section>\n      );\n    }\n\n    return <Card.Section>{this.renderTable()}</Card.Section>;\n  }\n}\n\nexport default OrderTotalsTable;\n","export function formatDate(date) {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const d = new Date(date);\n  const month = monthNames[d.getMonth()];\n  const day = d.getDate();\n  const year = d.getFullYear();\n\n  return `${month} ${day}, ${year}`;\n}\n\nexport function getMetafields(productId) {\n  const fetchOptions = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n  };\n\n  return fetch(`/api/products/${productId}/metafields.json`, fetchOptions)\n    .then((response) => response.json())\n    .then((json) => {\n      const metafields = json.metafields.filter((metafield) => {\n        return metafield.namespace === 'sousChef';\n      });\n\n      if (metafields.length > 0) {\n        const ingredients = JSON.parse(metafields[0].value);\n        return ingredients;\n      } else {\n        return null;\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n","import React, { Component } from \"react\";\nimport { Card, Layout, Page, Tabs } from \"@shopify/polaris\";\nimport DatePopover from \"../components/DatePopover\";\nimport OrderTotalsTable from \"../components/OrderTotalsTable\";\nimport IngredientTotalsTable from \"../components/IngredientTotalsTable\";\nimport { OrderConsumer } from \"../components/OrderProvider\";\n\nclass App extends Component {\n  state = {\n    selected: 0,\n    tabs: [\n      {\n        id: \"order-totals\",\n        content: \"Order totals\",\n        accessibilityLabel: \"Order totals\",\n        panelID: \"order-totals\"\n      },\n      {\n        id: \"ingredient-totals\",\n        content: \"Ingredient totals\",\n        accessibilityLabel: \"Ingredient totals\",\n        panelID: \"ingredient-totals\"\n      }\n    ]\n  };\n\n  handleTabChange = selectedTabIndex => {\n    this.setState({ selected: selectedTabIndex });\n  };\n\n  renderTabContent = (orders, requestInProgress) => {\n    const selected = this.state.selected;\n    if (selected === 0) {\n      return (\n        <OrderTotalsTable\n          orders={orders}\n          requestInProgress={requestInProgress}\n        />\n      );\n    } else {\n      return (\n        <IngredientTotalsTable\n          orders={orders}\n          requestInProgress={requestInProgress}\n        />\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Page title=\"Meal Totals\">\n        <OrderConsumer>\n          {({ getOrders, orders, requestInProgress }) => (\n            <Layout>\n              <Layout.Section>\n                <Card\n                  title=\"Search criteria\"\n                  primaryFooterAction={{\n                    content: \"Total meals\",\n                    onAction: getOrders\n                  }}\n                >\n                  <Card.Section title=\"Choose date\">\n                    Select meals ordered from <DatePopover /> to today.{\" \"}\n                  </Card.Section>\n                </Card>\n              </Layout.Section>\n              <Layout.Section>\n                <Card>\n                  <Tabs\n                    tabs={this.state.tabs}\n                    selected={this.state.selected}\n                    onSelect={this.handleTabChange}\n                    fitted={false}\n                  />\n                  {this.renderTabContent(orders, requestInProgress)}\n                </Card>\n              </Layout.Section>\n            </Layout>\n          )}\n        </OrderConsumer>\n      </Page>\n    );\n  }\n}\n\nexport default props => <App />;\n","module.exports = require(\"@shopify/polaris\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAQA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAIA;;;;AAlCA;AACA;AAoCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AARA;AADA;AAeA;;;;AA9CA;AACA;AAgDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AATA;AADA;AAgBA;;;;AAnCA;AACA;AAqCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AASA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AASA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAeA;;;;AAhKA;AACA;AAkKA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;;;;AAtEA;AACA;AAwEA;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AACA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AASA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AATA;AACA;AAiBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAjBA;AA+BA;;;;AA7EA;AACA;AA+EA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACvFA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}